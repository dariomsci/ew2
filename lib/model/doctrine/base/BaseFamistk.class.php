<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Famistk', 'doctrine');

/**
 * BaseFamistk
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $codfam
 * @property string $descri
 * @property integer $codage
 * @property Doctrine_Collection $Catalogo
 * 
 * @method integer             getCodfam()   Returns the current record's "codfam" value
 * @method string              getDescri()   Returns the current record's "descri" value
 * @method integer             getCodage()   Returns the current record's "codage" value
 * @method Doctrine_Collection getCatalogo() Returns the current record's "Catalogo" collection
 * @method Famistk             setCodfam()   Sets the current record's "codfam" value
 * @method Famistk             setDescri()   Sets the current record's "descri" value
 * @method Famistk             setCodage()   Sets the current record's "codage" value
 * @method Famistk             setCatalogo() Sets the current record's "Catalogo" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFamistk extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('famistk');
        $this->hasColumn('codfam', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('descri', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('codage', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Catalogo', array(
             'local' => 'codfam',
             'foreign' => 'codfam'));
    }
}