<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rencbtec', 'doctrine');

/**
 * BaseRencbtec
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $codemp
 * @property integer $codcom
 * @property integer $codtal
 * @property integer $numero
 * @property integer $nroren
 * @property integer $codigo
 * @property decimal $codres
 * @property date $fecha
 * @property string $hora
 * @property string $descom
 * @property string $letra
 * @property string $torig
 * @property string $norig
 * @property date $forig
 * @property float $importe
 * @property string $detalle
 * 
 * @method integer  getId()      Returns the current record's "id" value
 * @method integer  getCodemp()  Returns the current record's "codemp" value
 * @method integer  getCodcom()  Returns the current record's "codcom" value
 * @method integer  getCodtal()  Returns the current record's "codtal" value
 * @method integer  getNumero()  Returns the current record's "numero" value
 * @method integer  getNroren()  Returns the current record's "nroren" value
 * @method integer  getCodigo()  Returns the current record's "codigo" value
 * @method decimal  getCodres()  Returns the current record's "codres" value
 * @method date     getFecha()   Returns the current record's "fecha" value
 * @method string   getHora()    Returns the current record's "hora" value
 * @method string   getDescom()  Returns the current record's "descom" value
 * @method string   getLetra()   Returns the current record's "letra" value
 * @method string   getTorig()   Returns the current record's "torig" value
 * @method string   getNorig()   Returns the current record's "norig" value
 * @method date     getForig()   Returns the current record's "forig" value
 * @method float    getImporte() Returns the current record's "importe" value
 * @method string   getDetalle() Returns the current record's "detalle" value
 * @method Rencbtec setId()      Sets the current record's "id" value
 * @method Rencbtec setCodemp()  Sets the current record's "codemp" value
 * @method Rencbtec setCodcom()  Sets the current record's "codcom" value
 * @method Rencbtec setCodtal()  Sets the current record's "codtal" value
 * @method Rencbtec setNumero()  Sets the current record's "numero" value
 * @method Rencbtec setNroren()  Sets the current record's "nroren" value
 * @method Rencbtec setCodigo()  Sets the current record's "codigo" value
 * @method Rencbtec setCodres()  Sets the current record's "codres" value
 * @method Rencbtec setFecha()   Sets the current record's "fecha" value
 * @method Rencbtec setHora()    Sets the current record's "hora" value
 * @method Rencbtec setDescom()  Sets the current record's "descom" value
 * @method Rencbtec setLetra()   Sets the current record's "letra" value
 * @method Rencbtec setTorig()   Sets the current record's "torig" value
 * @method Rencbtec setNorig()   Sets the current record's "norig" value
 * @method Rencbtec setForig()   Sets the current record's "forig" value
 * @method Rencbtec setImporte() Sets the current record's "importe" value
 * @method Rencbtec setDetalle() Sets the current record's "detalle" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRencbtec extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rencbtec');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codemp', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('codcom', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('codtal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nroren', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('codigo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codres', 'decimal', 4, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('hora', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('descom', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('letra', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('torig', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('norig', 'string', 8, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('forig', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('importe', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('detalle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}