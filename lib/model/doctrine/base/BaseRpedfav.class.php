<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rpedfav', 'doctrine');

/**
 * BaseRpedfav
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $nropedfav
 * @property integer $nrorenfav
 * @property integer $codent
 * @property date $fecha
 * @property float $codart
 * @property integer $valatr1
 * @property integer $valatr2
 * @property integer $valatr3
 * @property integer $valatr4
 * @property float $cantidad
 * @property float $precio
 * @property float $porcbon
 * @property float $impsub
 * @property integer $canpes
 * @property integer $codage
 * @property integer $canxenv
 * @property integer $cantpal
 * @property decimal $pbonif1
 * @property decimal $pbonif2
 * @property decimal $precbon
 * @property Cpedfav $Cpedfav
 * 
 * @method integer getNropedfav() Returns the current record's "nropedfav" value
 * @method integer getNrorenfav() Returns the current record's "nrorenfav" value
 * @method integer getCodent()    Returns the current record's "codent" value
 * @method date    getFecha()     Returns the current record's "fecha" value
 * @method float   getCodart()    Returns the current record's "codart" value
 * @method integer getValatr1()   Returns the current record's "valatr1" value
 * @method integer getValatr2()   Returns the current record's "valatr2" value
 * @method integer getValatr3()   Returns the current record's "valatr3" value
 * @method integer getValatr4()   Returns the current record's "valatr4" value
 * @method float   getCantidad()  Returns the current record's "cantidad" value
 * @method float   getPrecio()    Returns the current record's "precio" value
 * @method float   getPorcbon()   Returns the current record's "porcbon" value
 * @method float   getImpsub()    Returns the current record's "impsub" value
 * @method integer getCanpes()    Returns the current record's "canpes" value
 * @method integer getCodage()    Returns the current record's "codage" value
 * @method integer getCanxenv()   Returns the current record's "canxenv" value
 * @method integer getCantpal()   Returns the current record's "cantpal" value
 * @method decimal getPbonif1()   Returns the current record's "pbonif1" value
 * @method decimal getPbonif2()   Returns the current record's "pbonif2" value
 * @method decimal getPrecbon()   Returns the current record's "precbon" value
 * @method Cpedfav getCpedfav()   Returns the current record's "Cpedfav" value
 * @method Rpedfav setNropedfav() Sets the current record's "nropedfav" value
 * @method Rpedfav setNrorenfav() Sets the current record's "nrorenfav" value
 * @method Rpedfav setCodent()    Sets the current record's "codent" value
 * @method Rpedfav setFecha()     Sets the current record's "fecha" value
 * @method Rpedfav setCodart()    Sets the current record's "codart" value
 * @method Rpedfav setValatr1()   Sets the current record's "valatr1" value
 * @method Rpedfav setValatr2()   Sets the current record's "valatr2" value
 * @method Rpedfav setValatr3()   Sets the current record's "valatr3" value
 * @method Rpedfav setValatr4()   Sets the current record's "valatr4" value
 * @method Rpedfav setCantidad()  Sets the current record's "cantidad" value
 * @method Rpedfav setPrecio()    Sets the current record's "precio" value
 * @method Rpedfav setPorcbon()   Sets the current record's "porcbon" value
 * @method Rpedfav setImpsub()    Sets the current record's "impsub" value
 * @method Rpedfav setCanpes()    Sets the current record's "canpes" value
 * @method Rpedfav setCodage()    Sets the current record's "codage" value
 * @method Rpedfav setCanxenv()   Sets the current record's "canxenv" value
 * @method Rpedfav setCantpal()   Sets the current record's "cantpal" value
 * @method Rpedfav setPbonif1()   Sets the current record's "pbonif1" value
 * @method Rpedfav setPbonif2()   Sets the current record's "pbonif2" value
 * @method Rpedfav setPrecbon()   Sets the current record's "precbon" value
 * @method Rpedfav setCpedfav()   Sets the current record's "Cpedfav" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRpedfav extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rpedfav');
        $this->hasColumn('nropedfav', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nrorenfav', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codent', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('codart', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('valatr1', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('valatr2', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('valatr3', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('valatr4', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cantidad', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('precio', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('porcbon', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('impsub', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('canpes', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codage', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('canxenv', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cantpal', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('pbonif1', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '2',
             ));
        $this->hasColumn('pbonif2', 'decimal', 15, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             'scale' => '2',
             ));
        $this->hasColumn('precbon', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cpedfav', array(
             'local' => 'nropedfav',
             'foreign' => 'nropedfav'));
    }
}