<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Creclamo', 'doctrine');

/**
 * BaseCreclamo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_reclamo
 * @property integer $id_tipo
 * @property integer $id_defecto
 * @property string $remito
 * @property integer $devuelve
 * @property string $factura
 * @property string $transporte
 * @property date $fecha
 * @property time $hora
 * @property integer $codent
 * @property integer $codart
 * @property integer $cantidad
 * @property string $fecelab
 * @property integer $nromaq
 * @property string $observacion
 * @property string $destino
 * @property string $medtrans
 * @property string $usuario
 * 
 * @method integer  getIdReclamo()   Returns the current record's "id_reclamo" value
 * @method integer  getIdTipo()      Returns the current record's "id_tipo" value
 * @method integer  getIdDefecto()   Returns the current record's "id_defecto" value
 * @method string   getRemito()      Returns the current record's "remito" value
 * @method integer  getDevuelve()    Returns the current record's "devuelve" value
 * @method string   getFactura()     Returns the current record's "factura" value
 * @method string   getTransporte()  Returns the current record's "transporte" value
 * @method date     getFecha()       Returns the current record's "fecha" value
 * @method time     getHora()        Returns the current record's "hora" value
 * @method integer  getCodent()      Returns the current record's "codent" value
 * @method integer  getCodart()      Returns the current record's "codart" value
 * @method integer  getCantidad()    Returns the current record's "cantidad" value
 * @method string   getFecelab()     Returns the current record's "fecelab" value
 * @method integer  getNromaq()      Returns the current record's "nromaq" value
 * @method string   getObservacion() Returns the current record's "observacion" value
 * @method string   getDestino()     Returns the current record's "destino" value
 * @method string   getMedtrans()    Returns the current record's "medtrans" value
 * @method string   getUsuario()     Returns the current record's "usuario" value
 * @method Creclamo setIdReclamo()   Sets the current record's "id_reclamo" value
 * @method Creclamo setIdTipo()      Sets the current record's "id_tipo" value
 * @method Creclamo setIdDefecto()   Sets the current record's "id_defecto" value
 * @method Creclamo setRemito()      Sets the current record's "remito" value
 * @method Creclamo setDevuelve()    Sets the current record's "devuelve" value
 * @method Creclamo setFactura()     Sets the current record's "factura" value
 * @method Creclamo setTransporte()  Sets the current record's "transporte" value
 * @method Creclamo setFecha()       Sets the current record's "fecha" value
 * @method Creclamo setHora()        Sets the current record's "hora" value
 * @method Creclamo setCodent()      Sets the current record's "codent" value
 * @method Creclamo setCodart()      Sets the current record's "codart" value
 * @method Creclamo setCantidad()    Sets the current record's "cantidad" value
 * @method Creclamo setFecelab()     Sets the current record's "fecelab" value
 * @method Creclamo setNromaq()      Sets the current record's "nromaq" value
 * @method Creclamo setObservacion() Sets the current record's "observacion" value
 * @method Creclamo setDestino()     Sets the current record's "destino" value
 * @method Creclamo setMedtrans()    Sets the current record's "medtrans" value
 * @method Creclamo setUsuario()     Sets the current record's "usuario" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCreclamo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('creclamo');
        $this->hasColumn('id_reclamo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_tipo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_defecto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('remito', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('devuelve', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('factura', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('transporte', 'string', 35, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 35,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('hora', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('codent', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('codart', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cantidad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecelab', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('nromaq', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('observacion', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('destino', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('medtrans', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('usuario', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}