<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Fichares', 'doctrine');

/**
 * BaseFichares
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $codemp
 * @property integer $codigo
 * @property integer $codres
 * @property integer $cosecha
 * @property integer $cereal
 * @property float $kilos1
 * @property float $kilos2
 * @property float $kilos3
 * @property float $kilos4
 * @property float $kilos5
 * @property float $kilos6
 * @property float $kilos7
 * @property float $kilstk
 * 
 * @method integer  getId()      Returns the current record's "id" value
 * @method integer  getCodemp()  Returns the current record's "codemp" value
 * @method integer  getCodigo()  Returns the current record's "codigo" value
 * @method integer  getCodres()  Returns the current record's "codres" value
 * @method integer  getCosecha() Returns the current record's "cosecha" value
 * @method integer  getCereal()  Returns the current record's "cereal" value
 * @method float    getKilos1()  Returns the current record's "kilos1" value
 * @method float    getKilos2()  Returns the current record's "kilos2" value
 * @method float    getKilos3()  Returns the current record's "kilos3" value
 * @method float    getKilos4()  Returns the current record's "kilos4" value
 * @method float    getKilos5()  Returns the current record's "kilos5" value
 * @method float    getKilos6()  Returns the current record's "kilos6" value
 * @method float    getKilos7()  Returns the current record's "kilos7" value
 * @method float    getKilstk()  Returns the current record's "kilstk" value
 * @method Fichares setId()      Sets the current record's "id" value
 * @method Fichares setCodemp()  Sets the current record's "codemp" value
 * @method Fichares setCodigo()  Sets the current record's "codigo" value
 * @method Fichares setCodres()  Sets the current record's "codres" value
 * @method Fichares setCosecha() Sets the current record's "cosecha" value
 * @method Fichares setCereal()  Sets the current record's "cereal" value
 * @method Fichares setKilos1()  Sets the current record's "kilos1" value
 * @method Fichares setKilos2()  Sets the current record's "kilos2" value
 * @method Fichares setKilos3()  Sets the current record's "kilos3" value
 * @method Fichares setKilos4()  Sets the current record's "kilos4" value
 * @method Fichares setKilos5()  Sets the current record's "kilos5" value
 * @method Fichares setKilos6()  Sets the current record's "kilos6" value
 * @method Fichares setKilos7()  Sets the current record's "kilos7" value
 * @method Fichares setKilstk()  Sets the current record's "kilstk" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFichares extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fichares');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codemp', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('codigo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codres', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cosecha', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cereal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('kilos1', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos2', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos3', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos4', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos5', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos6', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilos7', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('kilstk', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}